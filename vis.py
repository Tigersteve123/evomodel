import argparse
import numpy as np
import matplotlib.pyplot as plt

from model import model
from heatmap import heatmap
from summary import summary

parser = argparse.ArgumentParser(description='Generate labeled heatmaps')

parser.add_argument('matrix', metavar='mat', type=str, nargs=1, help='path to numpy matrix file generated by model')
parser.add_argument('--savepath', '-f', type=str, help='path to save figures')
parser.add_argument('--show', '-s', help='show figures', action='store_true')

m = parser.parse_args()

filename = m.matrix[0]

data = np.load(filename, allow_pickle=True)

if 'test' in filename:
    params = filename.split('_')[1:]
    params[-1] = params[-1][:-4]
    params = [float(x) for x in params]
    mod = model(params[0], .0000001, 11, params[1], 0.05, 5, params[2])
else: mod = model(0.0000001, .0000001, 11, 0.4, 0.05, 5, .9)

summ = summary(data[0], mod=mod)
#print(data[0])

if m.savepath: summ.vis(m.savepath, show=m.show)
else: summ.vis(show=m.show)
#if m.savepath: summ.plotQuarantine(data[5]/1000, data[6]/1000, data[7]/1000, data[4]/1000, data[1]/1000, data[2]/1000, savedirec=m.savepath, show=m.show)
#else: summ.plotQuarantine(data[5]/1000, data[6]/1000, data[7]/1000, data[4]/1000, data[1]/1000, data[2]/1000, show=m.show)
